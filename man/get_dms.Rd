% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-dms.R
\name{get_dms}
\alias{get_dms}
\title{Digital Members}
\usage{
get_dms(
  conn,
  sub_types = c("Personal", "Organization"),
  mem_types = c("None", "Public", "Premium", "Pro", "Experimental", "Platinum"),
  org_ids = NULL,
  people_ids = NULL
)
}
\arguments{
\item{conn}{connection to the data warehouse}

\item{sub_types}{vector of DM types to retrieve (can be Personal, Organization or both)}

\item{mem_types}{vector of DM membership tiers (can be None, Public, Premium, Pro, Experimental, Platinum)}

\item{org_ids}{vector of active organisation ids}

\item{people_ids}{vector of user SF ids you might want to exclude}
}
\value{
a named list
}
\description{
The Strategic Intelligence Subscription Type is used to bucket categorise accounts for various
purposes, primarily for account management and email distribution.  It is acknowledged that
accounts may legitimately belong to multiple types, however this is used to identify their
primary type. Subscription Type can be one of: None, Personal, Organization, TopLink
Rules as to which subscription type a person has are applied in the following order:
\enumerate{
\item If the account is inactive, SI_Sub_Type__c = None
\item If the person has a Subscription Level of Public, SI_Sub_Type__c = None
\item If the person has a qualifying personal engagement: SI_Sub_Type__c = TopLink
\item If the person has a qualifying position with a member or partner organization: SI_Sub_Type__c = TopLink
\item If the person is a Forum Staff Member: SI_Sub_Type__c = TopLink
\item If the TopLink eligibility has been directly overridden as Eligible on the account: SI_Sub_Type__c = TopLink
\item If the person has a paying subscription: SI_Sub_Type__c = Personal
\item If the SI Subscription level has been directly overridden on the account: SI_Sub_Type__c = Personal
\item If the person has a TopLink Username using the domain of a members or partner organization: SI_Sub_Type__c = Organization
}
}
\details{
Identify different groups of digital members.
}
\examples{
\dontrun{
conn <- connect_dw()
dt1 <- get_all_ncs(conn)
get_dms(conn, dt1$org_id)
get_dms(conn, "Personal", "Pro")
}

}
